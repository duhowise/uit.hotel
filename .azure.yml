variables:
    folder_root: $(Build.SourcesDirectory)
    folder_packages: $(folder_root)/packages
    NUGET_PACKAGES: $(folder_packages)

    artifacts_dotnet_core: "d09745d0-213d-4136-bcd1-78ba4998212a"
    artifacts_nodejs: "112b6df3-39ce-4dc9-a4ed-df6940f01b04"

    path_server: "uit.hotel"
    path_server_test: "uit.hotel.test"
    path_client: "uit.hotel.client"

    dotnet_key_file: "**/*.csproj, **/*.sln, **/.azure.yml"

    obj_path: $(path_server)/obj
    obj_cache: $(folder_packages)/$(obj_path)
    obj_project: $(folder_root)/$(obj_path)

    obj_test_path: $(path_server_test)/obj
    obj_test_cache: $(folder_packages)/$(obj_test_path)
    obj_test_project: $(folder_root)/$(obj_test_path)

jobs:
    - job: DotNetCore
      pool:
          vmImage: "ubuntu-latest"
      steps:
          - task: RestoreAndSaveCache@1
            displayName: "[Cache] Restore artifact based on: $(dotnet_key_file)"
            inputs:
                keyfile: $(dotnet_key_file)
                targetfolder: "$(folder_packages)"
                vstsFeed: $(artifacts_dotnet_core)

          - script: |
                mkdir -p $(obj_cache)
                mkdir -p $(obj_project)
                cp $(obj_cache)/* $(obj_project)/ || true
                ls $(obj_cache)
                ls $(obj_project)

                mkdir -p $(obj_test_cache)
                mkdir -p $(obj_test_project)
                cp $(obj_test_cache)/* $(obj_test_project)/ || true
                ls $(obj_test_cache)
                ls $(obj_test_project)
            displayName: "[Copy] Copy from cache"

          - script: dotnet --info
            displayName: "[Server] dotnet --info"

          - script: dotnet restore
            displayName: "[Server] Dotnet restore"

          - script: |
                mkdir -p $(obj_cache)
                mkdir -p $(obj_project)
                cp $(obj_project)/* $(obj_cache)/ || true
                ls $(obj_cache)
                ls $(obj_project)

                mkdir -p $(obj_test_cache)
                mkdir -p $(obj_test_project)
                cp $(obj_test_project)/* $(obj_test_cache)/ || true
                ls $(obj_test_cache)
                ls $(obj_test_project)
            displayName: "[Copy] Copy to cache"

          - script: dotnet build --no-restore
            displayName: "[Server] dotnet build"

          - script: dotnet test --no-build
            displayName: "[Server] dotnet test"
    - job: NodeJS
      pool:
          vmImage: "ubuntu-latest"
      steps:
          - task: RestoreAndSaveCache@1
            displayName: "[Cache] Restore artifact based on: yarn.lock"
            inputs:
                keyfile: "**/yarn.lock, !**/node_modules/**/yarn.lock, !**/.*/**/yarn.lock"
                targetfolder: "**/node_modules, !**/node_modules/**/node_modules"
                vstsFeed: "$(artifacts_nodejs)"

          - task: UseNode@1
            inputs:
                version: "10.15.3"
            displayName: "[Client] Install NodeJS"

          - script: |
                cd $(path_client)
                yarn
                yarn build
            displayName: "[Client] yarn install & yarn build"
